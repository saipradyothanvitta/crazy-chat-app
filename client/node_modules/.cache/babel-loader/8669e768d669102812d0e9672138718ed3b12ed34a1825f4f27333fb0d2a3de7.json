{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saipr\\\\OneDrive\\\\Desktop\\\\crazy-chat\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport './App.css';\n\n// Connect to the backend server\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(process.env.REACT_APP_BACKEND_URL || \"http://localhost:3001\");\nfunction App() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [room, setRoom] = useState('');\n  const [saveHistory, setSaveHistory] = useState(true); // New state for the checkbox\n  const [showChat, setShowChat] = useState(false);\n  const [currentMessage, setCurrentMessage] = useState('');\n  const [messageList, setMessageList] = useState([]);\n  const [typingStatus, setTypingStatus] = useState('');\n  const [onlineUsers, setOnlineUsers] = useState(0);\n  const chatBodyRef = useRef(null);\n  const typingTimeoutRef = useRef(null);\n  const joinRoom = () => {\n    if (username.trim() !== \"\" && room.trim() !== \"\") {\n      // Send the saveHistory preference when joining\n      socket.emit('join_room', {\n        username,\n        room,\n        saveHistory\n      });\n      setShowChat(true);\n    }\n  };\n  const sendMessage = async () => {\n    if (currentMessage.trim() !== \"\") {\n      const messageData = {\n        id: Date.now() + '-' + socket.id,\n        type: 'message',\n        room: room,\n        author: username,\n        message: currentMessage,\n        time: new Date(Date.now()).toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        }),\n        status: 'sent',\n        saveHistory: saveHistory // Include preference with each message\n      };\n      await socket.emit('send_message', messageData);\n      setMessageList(list => [...list, messageData]);\n      socket.emit('stop_typing', {\n        room\n      });\n      setCurrentMessage(\"\");\n    }\n  };\n\n  // Effect for handling all socket events\n  useEffect(() => {\n    const handleReceiveMessage = data => {\n      if (data.type === 'message' && data.senderId !== socket.id) {\n        socket.emit('message_delivered', {\n          messageId: data.id,\n          senderId: data.senderId\n        });\n      }\n      setMessageList(list => [...list, data]);\n    };\n    const handleChatHistory = history => {\n      // Populate message list with historical data\n      setMessageList(history);\n    };\n    const handleUpdateStatus = data => {\n      setMessageList(list => list.map(msg => msg.id === data.messageId && msg.status !== 'read' ? {\n        ...msg,\n        status: data.status\n      } : msg));\n    };\n    const handleReadStatus = data => {\n      setMessageList(list => list.map(msg => msg.author !== username && msg.senderId === data.readerId ? {\n        ...msg,\n        status: 'read'\n      } : msg));\n    };\n    const typingListener = data => setTypingStatus(data);\n    const roomDataListener = data => setOnlineUsers(data.userCount);\n    socket.on('receive_message', handleReceiveMessage);\n    socket.on('chat_history', handleChatHistory); // Listen for history\n    socket.on('update_message_status', handleUpdateStatus);\n    socket.on('update_read_status', handleReadStatus);\n    socket.on('typing_status', typingListener);\n    socket.on('room_data', roomDataListener);\n    return () => {\n      socket.off('receive_message', handleReceiveMessage);\n      socket.off('chat_history', handleChatHistory);\n      socket.off('update_message_status', handleUpdateStatus);\n      socket.off('update_read_status', handleReadStatus);\n      socket.off('typing_status', typingListener);\n      socket.off('room_data', roomDataListener);\n    };\n  }, [username]);\n\n  // Effect for auto-scrolling\n  useEffect(() => {\n    if (chatBodyRef.current) {\n      chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\n    }\n  }, [messageList]);\n\n  // Effect for handling user typing\n  const handleTyping = e => {\n    setCurrentMessage(e.target.value);\n    socket.emit('typing', {\n      room,\n      username\n    });\n    if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current);\n    typingTimeoutRef.current = setTimeout(() => {\n      socket.emit('stop_typing', {\n        room\n      });\n    }, 2000);\n  };\n\n  // Effect for marking messages as read when window is focused\n  useEffect(() => {\n    const handleFocus = () => {\n      socket.emit('messages_read', {\n        room\n      });\n    };\n    window.addEventListener('focus', handleFocus);\n    return () => window.removeEventListener('focus', handleFocus);\n  }, [room]);\n  const renderTicks = status => {\n    if (status === 'read') return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tick read\",\n      children: \"\\u2713\\u2713\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 35\n    }, this);\n    if (status === 'delivered') return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tick delivered\",\n      children: \"\\u2713\\u2713\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 40\n    }, this);\n    if (status === 'sent') return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"tick sent\",\n      children: \"\\u2713\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 35\n    }, this);\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !showChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joinChatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"welcome-text\",\n        children: \"Welcome to Crazy Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Join A Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your Name...\",\n        onChange: e => setUsername(e.target.value),\n        onKeyPress: e => {\n          e.key === \"Enter\" && joinRoom();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Room ID...\",\n        onChange: e => setRoom(e.target.value),\n        onKeyPress: e => {\n          e.key === \"Enter\" && joinRoom();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"save-history-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"saveHistory\",\n          checked: saveHistory,\n          onChange: e => setSaveHistory(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"saveHistory\",\n          children: \"Save Chat History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinRoom,\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-window\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Live Chat | Room: \", room]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"online-count\",\n            children: [onlineUsers, \" Online\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-body\",\n          ref: chatBodyRef,\n          children: messageList.map(msg => {\n            if (msg.type === 'notification') {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message notification\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: msg.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 94\n                }, this)\n              }, msg.id || Math.random(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 26\n              }, this);\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message\",\n              id: username === msg.author ? \"you\" : \"other\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: [username !== msg.author && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"message-author\",\n                  children: msg.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 52\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: msg.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: msg.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 23\n                }, this), username === msg.author && renderTicks(msg.status)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this)]\n            }, msg.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: typingStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: currentMessage,\n            placeholder: \"Type a message...\",\n            onChange: handleTyping,\n            onKeyPress: e => {\n              e.key === \"Enter\" && sendMessage();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            children: \"\\u25BA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"REsuTzUnIAHA2lmShcVQw+8Puq8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","socket","connect","process","env","REACT_APP_BACKEND_URL","App","_s","username","setUsername","room","setRoom","saveHistory","setSaveHistory","showChat","setShowChat","currentMessage","setCurrentMessage","messageList","setMessageList","typingStatus","setTypingStatus","onlineUsers","setOnlineUsers","chatBodyRef","typingTimeoutRef","joinRoom","trim","emit","sendMessage","messageData","id","Date","now","type","author","message","time","toLocaleTimeString","hour","minute","status","list","handleReceiveMessage","data","senderId","messageId","handleChatHistory","history","handleUpdateStatus","map","msg","handleReadStatus","readerId","typingListener","roomDataListener","userCount","on","off","current","scrollTop","scrollHeight","handleTyping","e","target","value","clearTimeout","setTimeout","handleFocus","window","addEventListener","removeEventListener","renderTicks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onKeyPress","key","checked","htmlFor","onClick","ref","Math","random","_c","$RefreshReg$"],"sources":["C:/Users/saipr/OneDrive/Desktop/crazy-chat/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport io from 'socket.io-client';\r\nimport './App.css';\r\n\r\n// Connect to the backend server\r\nconst socket = io.connect(process.env.REACT_APP_BACKEND_URL || \"http://localhost:3001\");\r\n\r\nfunction App() {\r\n  const [username, setUsername] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [saveHistory, setSaveHistory] = useState(true); // New state for the checkbox\r\n  const [showChat, setShowChat] = useState(false);\r\n  const [currentMessage, setCurrentMessage] = useState('');\r\n  const [messageList, setMessageList] = useState([]);\r\n  const [typingStatus, setTypingStatus] = useState('');\r\n  const [onlineUsers, setOnlineUsers] = useState(0);\r\n  const chatBodyRef = useRef(null);\r\n  const typingTimeoutRef = useRef(null);\r\n\r\n  const joinRoom = () => {\r\n    if (username.trim() !== \"\" && room.trim() !== \"\") {\r\n      // Send the saveHistory preference when joining\r\n      socket.emit('join_room', { username, room, saveHistory });\r\n      setShowChat(true);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (currentMessage.trim() !== \"\") {\r\n      const messageData = {\r\n        id: Date.now() + '-' + socket.id,\r\n        type: 'message',\r\n        room: room,\r\n        author: username,\r\n        message: currentMessage,\r\n        time: new Date(Date.now()).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }),\r\n        status: 'sent',\r\n        saveHistory: saveHistory, // Include preference with each message\r\n      };\r\n      await socket.emit('send_message', messageData);\r\n      setMessageList((list) => [...list, messageData]);\r\n      socket.emit('stop_typing', { room });\r\n      setCurrentMessage(\"\");\r\n    }\r\n  };\r\n\r\n  // Effect for handling all socket events\r\n  useEffect(() => {\r\n    const handleReceiveMessage = (data) => {\r\n      if (data.type === 'message' && data.senderId !== socket.id) {\r\n        socket.emit('message_delivered', { messageId: data.id, senderId: data.senderId });\r\n      }\r\n      setMessageList((list) => [...list, data]);\r\n    };\r\n\r\n    const handleChatHistory = (history) => {\r\n      // Populate message list with historical data\r\n      setMessageList(history);\r\n    };\r\n\r\n    const handleUpdateStatus = (data) => {\r\n      setMessageList((list) =>\r\n        list.map((msg) =>\r\n          msg.id === data.messageId && msg.status !== 'read'\r\n            ? { ...msg, status: data.status }\r\n            : msg\r\n        )\r\n      );\r\n    };\r\n\r\n    const handleReadStatus = (data) => {\r\n      setMessageList((list) =>\r\n        list.map((msg) =>\r\n          msg.author !== username && msg.senderId === data.readerId\r\n            ? { ...msg, status: 'read' }\r\n            : msg\r\n        )\r\n      );\r\n    };\r\n\r\n    const typingListener = (data) => setTypingStatus(data);\r\n    const roomDataListener = (data) => setOnlineUsers(data.userCount);\r\n\r\n    socket.on('receive_message', handleReceiveMessage);\r\n    socket.on('chat_history', handleChatHistory); // Listen for history\r\n    socket.on('update_message_status', handleUpdateStatus);\r\n    socket.on('update_read_status', handleReadStatus);\r\n    socket.on('typing_status', typingListener);\r\n    socket.on('room_data', roomDataListener);\r\n\r\n    return () => {\r\n      socket.off('receive_message', handleReceiveMessage);\r\n      socket.off('chat_history', handleChatHistory);\r\n      socket.off('update_message_status', handleUpdateStatus);\r\n      socket.off('update_read_status', handleReadStatus);\r\n      socket.off('typing_status', typingListener);\r\n      socket.off('room_data', roomDataListener);\r\n    };\r\n  }, [username]);\r\n\r\n  // Effect for auto-scrolling\r\n  useEffect(() => {\r\n    if (chatBodyRef.current) {\r\n      chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\r\n    }\r\n  }, [messageList]);\r\n\r\n  // Effect for handling user typing\r\n  const handleTyping = (e) => {\r\n    setCurrentMessage(e.target.value);\r\n    socket.emit('typing', { room, username });\r\n\r\n    if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current);\r\n    typingTimeoutRef.current = setTimeout(() => {\r\n      socket.emit('stop_typing', { room });\r\n    }, 2000);\r\n  };\r\n\r\n  // Effect for marking messages as read when window is focused\r\n  useEffect(() => {\r\n    const handleFocus = () => {\r\n      socket.emit('messages_read', { room });\r\n    };\r\n    window.addEventListener('focus', handleFocus);\r\n    return () => window.removeEventListener('focus', handleFocus);\r\n  }, [room]);\r\n\r\n  const renderTicks = (status) => {\r\n    if (status === 'read') return <span className=\"tick read\">✓✓</span>;\r\n    if (status === 'delivered') return <span className=\"tick delivered\">✓✓</span>;\r\n    if (status === 'sent') return <span className=\"tick sent\">✓</span>;\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!showChat ? (\r\n        <div className=\"joinChatContainer\">\r\n          <h1 className=\"welcome-text\">Welcome to Crazy Chat</h1>\r\n          <h3>Join A Chat</h3>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Your Name...\"\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            onKeyPress={(e) => { e.key === \"Enter\" && joinRoom(); }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Room ID...\"\r\n            onChange={(e) => setRoom(e.target.value)}\r\n            onKeyPress={(e) => { e.key === \"Enter\" && joinRoom(); }}\r\n          />\r\n          <div className=\"save-history-container\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"saveHistory\"\r\n              checked={saveHistory}\r\n              onChange={(e) => setSaveHistory(e.target.checked)}\r\n            />\r\n            <label htmlFor=\"saveHistory\">Save Chat History</label>\r\n          </div>\r\n          <button onClick={joinRoom}>Join Room</button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"chat-window-container\">\r\n          <div className=\"chat-window\">\r\n            <div className=\"chat-header\">\r\n              <p>Live Chat | Room: {room}</p>\r\n              <span className=\"online-count\">{onlineUsers} Online</span>\r\n            </div>\r\n            <div className=\"chat-body\" ref={chatBodyRef}>\r\n              {messageList.map((msg) => {\r\n                if (msg.type === 'notification') {\r\n                  return <div key={msg.id || Math.random()} className=\"message notification\"><p>{msg.message}</p></div>;\r\n                }\r\n                return (\r\n                  <div key={msg.id} className=\"message\" id={username === msg.author ? \"you\" : \"other\"}>\r\n                    <div className=\"message-content\">\r\n                       {username !== msg.author && <p className=\"message-author\">{msg.author}</p>}\r\n                      <p>{msg.message}</p>\r\n                    </div>\r\n                    <div className=\"message-meta\">\r\n                      <span>{msg.time}</span>\r\n                      {username === msg.author && renderTicks(msg.status)}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <div className=\"typing-indicator\"><p>{typingStatus}</p></div>\r\n            <div className=\"chat-footer\">\r\n              <input\r\n                type=\"text\"\r\n                value={currentMessage}\r\n                placeholder=\"Type a message...\"\r\n                onChange={handleTyping}\r\n                onKeyPress={(e) => { e.key === \"Enter\" && sendMessage(); }}\r\n              />\r\n              <button onClick={sendMessage}>&#9658;</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}